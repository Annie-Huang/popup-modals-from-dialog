.modal {
  padding: 0;
  max-width: 50ch;
  border: 0;
  box-shadow: 0 0 1em rgba(0, 0, 0, 0.3), 0 0 0 100vmax rgba(0, 0, 0, 0.5);
  border-radius: 0.25rem;
}

.modal-content {
  padding: 1rem;
}

.modal::backdrop {
  background: rgba(0, 0, 0, 0.4);
  opacity: 0;
}

.modal[open] {
  animation: slide-up 1000ms forwards, fade-in 500ms forwards;
}

/*
// .modal[open]::backdrop animation does not work in firefox, so use boxshadow in .modal instead
// But it means you cannot run different timing in the animation.
.modal[open]::backdrop {
  // transition on opacity does not work.
  //opacity: 1;

  // animate on opacity does work for all browser except for firefox
  animation: fade-in 500ms forwards;
}
*/
.modal[closing] {
  display: block;
  pointer-events: none;
  inset: 0;
  animation: fade-out 500ms forwards;
}

/*
// since .modal[open]::backdrop commented out, so use boxshadow in .modal instead
.modal[closing]::backdrop {
  // the timing value has to be the same as the .modal[closing] animation value, otherwise you will see the jumping effect.
  // reason is explained in the index.js
  //animation: fade-out 2000ms forwards;
  animation: fade-out 500ms forwards;
}*/
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes slide-up {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(0%);
  }
}
/* extra styling */
body {
  --gray-2: #e9ecef;
  --gray-8: #343a40;
  --cyan-9: #0b7285;
  --size-2: 0.5rem;
  --size-4: 1.25rem;
  min-height: 100vh;
  margin: 2rem;
  font-family: system-ui;
  font-size: 1.25rem;
  line-height: 1.5;
  color: var(--gray-8);
}

h1 em {
  color: var(--cyan-9);
  text-decoration: underline;
  text-underline-offset: 0.25em;
}

.button {
  border: 0;
  cursor: pointer;
  background: var(--gray-8);
  color: var(--gray-2);
  font-weight: 700;
  padding: var(--size-2) var(--size-4);
}

.button:hover,
.button:focus {
  background: var(--cyan-9);
}

form {
  display: grid;
  gap: 1em;
}

/*# sourceMappingURL=style.css.map */
